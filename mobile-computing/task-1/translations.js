/**
 * Translations for presentation
 */
const uiTranslations = {
    'en': {
        'exportToPdf': 'Export to PDF',
        'languageToggle': 'Bahasa Indonesia',
        'fullscreen': 'Fullscreen',
        'exitFullscreen': 'Exit Fullscreen',
        'tableOfContents': 'Table of Contents'
    },
    'id': {
        'exportToPdf': 'Ekspor ke PDF',
        'languageToggle': 'English',
        'fullscreen': 'Layar Penuh',
        'exitFullscreen': 'Keluar Layar Penuh',
        'tableOfContents': 'Daftar Isi'
    }
};

const pageTranslations = {
    'en': {
        // Cover
        'title': 'Multi-Layer Perceptron Neural Network and Internet of Things for Improving the Realtime Aquatic Ecosystem Quality Monitoring and Analysis',
        'paperSummary': 'Paper Summary Presentation',
        'authors': 'Original Paper Authors:',
        'publishedIn': 'Published in:',
        'conference': 'International Journal of Interactive Mobile Technologies (2022)',
        'presentedBy': 'Presented by:',
        'course': 'Machine Learning Course',

        // Outline
        'outlineTitle': 'Presentation Outline',
        'intro': '1. Introduction',
        'problemStatement': 'Background, challenges, and importance of aquatic ecosystem monitoring',
        'waterQuality': '2. Water Quality Parameters',
        'waterQualityDesc': 'Key indicators for aquatic ecosystem health and fish welfare',
        'methods': '3. Research Methods',
        'methodsDescription': 'Data acquisition, SMOTE, MLPNN, and IoT development',
        'iotImplementation': '4. IoT System Implementation',
        'iotImplementationDesc': 'Sensors, hardware architecture, and automatic control functions',
        'results': '5. Results and Discussion',
        'resultsDescription': 'Model evaluation and system performance analysis',
        'comparison': '6. Comparison with Previous Research',
        'comparisonDesc': 'Advantages and innovations compared to related studies',
        'uiImplementation': '7. UI and Application Implementation',
        'uiImplementationDesc': 'Mobile interface and system visualization',
        'conclusion': '8. Conclusion and Future Work',
        'conclusionDescription': 'Summary and suggestions for future research',

        // Introduction
        'introTitle': 'Introduction',
        'background': 'Background',
        'backgroundPoint1': 'Raising fish reduces stress and blood pressure; helps treat adolescents with diabetes',
        'backgroundPoint2': 'COVID-19 pandemic led to increased popularity of ornamental fish keeping',
        'backgroundPoint3': 'Fish farming businesses often encounter challenges in adequate fish care',
        'challenges': 'Challenges',
        'challengesPoint1': 'Insufficient staff or caretakers for aquarium maintenance',
        'challengesPoint2': 'Difficulty maintaining appropriate water quality for each fish species',
        'challengesPoint3': 'Poor water quality leads to fish fatalities and business losses',
        'quote': '"For fish to survive for a long time, there are many factors such as water temperature, turbidity, TDS, pH, ORP, EC, DO, nitrate and phosphate."',
        'whyIoT': 'Why IoT and AI?',
        'whyIoTDesc': 'Internet of Things and neural networks can efficiently monitor and control water quality, automate water replacement, and predict ideal conditions for fish survival and growth.',

        // Water Quality Parameters
        'waterQualityTitle': 'Water Quality Parameters',
        'temperature': 'Temperature',
        'temperaturePoint1': 'Fish are cold-blooded animals',
        'temperaturePoint2': 'Body temperature/metabolism changes with water temperature',
        'temperaturePoint3': 'Affects growth and breeding directly',
        'ph': 'pH Level',
        'phPoint1': 'Concentration of hydrogen ions (H+)',
        'phPoint2': 'pH 7.0 is neutral, below is acidic, above is alkaline',
        'phPoint3': 'Suitable pH for fish: between 6.5 and 9.0',
        'do': 'Dissolved Oxygen (DO)',
        'doPoint1': 'Oxygen from atmosphere and plants dissolves in water',
        'doPoint2': 'Minimum DO for many fish: 4.0-5.0 mg/L',
        'doPoint3': 'Essential for fish respiration and metabolism',
        'turbidity': 'Turbidity',
        'turbidityPoint1': 'Cloudiness in water from suspended solids',
        'turbidityPoint2': 'Affects light penetration and water clarity',
        'turbidityPoint3': 'Can clog fish respiratory system',
        'turbidityPoint4': 'Measured in Nephelometric Turbidity Units (NTU)',
        'tds': 'Total Dissolved Solids (TDS)',
        'tdsPoint1': 'Concentration of dissolved organic and inorganic substances',
        'tdsPoint2': 'Can cause toxicity through increased salinity',
        'tdsPoint3': 'Affects fish metabolism and reproduction',
        'nitrate': 'Nitrate Ion',
        'nitratePoint1': 'Produced from nitrogen cycle in aquarium',
        'nitratePoint2': 'Forms from fish waste and uneaten food',
        'nitratePoint3': 'High levels decrease blood hemoglobin, affecting oxygen intake',
        'nitratePoint4': 'Regular water replacement reduces nitrate levels',
        'nitrogenCycle': 'The Nitrogen Cycle',
        'nitrogenCycleDesc': 'Fish waste and uneaten food → Ammonia (NH₃) → Nitrites (NO₂⁻) → Nitrates (NO₃⁻). Water changes help remove nitrates which can be toxic to fish at high levels.',

        // Research Methods
        'methodsTitle': 'Research Methods',
        'methodOverview': 'Research Methodology Overview',
        'dataAcq': 'Data<br>Acquisition',
        'dataAcqDesc': 'Collected data from different ornamental fish farms',
        'smote': 'SMOTE<br>Balancing',
        'smoteDesc': 'Synthetic Minority Over-Sampling Technique helps resynthesize data',
        'mlpnn': 'MLPNN<br>Model',
        'mlpnnDesc': 'Multi-Layer Perceptron Neural Network with parameters',
        'iot': 'IoT<br>Implementation',
        'iotDesc': 'Hardware and software system development',

        // Data Acquisition
        'dataAcquisition': 'Data Acquisition',
        'dataAcqPoint1': 'Collected data from different ornamental fish farms',
        'dataAcqPoint2': 'Focus on five favorite tropical fish in Thailand: Angelfish, Goldfish, Guppy, Platy, and Sumatran Tiger Barb',
        'dataAcqPoint3': '1,592 records with 10 features and 1 class (water quality)',
        'dataAcqPoint4': 'Features: fish kind, pH, DO, TDS, nitrate, temperature, turbidity, etc.',
        'dataAcqPoint5': 'Output class: water quality (good, poor)',

        // SMOTE
        'smoteTitle': 'SMOTE for Imbalanced Data',
        'smoteIntro': 'Synthetic Minority Over-Sampling Technique helps resynthesize data by:',
        'smotePoint1': 'Growing dataset size with small amount of class data',
        'smotePoint2': 'Making dataset consistent with largest class',
        'smotePoint3': 'Setting k=5 nearest neighbors and randomSeed=1',
        'smotePoint4': 'Increasing dataset from 1,592 to 5,469 records (400% SMOTE)',

        // MLPNN
        'mlpnnTitle': 'Multi-Layer Perceptron Neural Network',
        'mlpnnIntro': 'Key MLPNN characteristics:',
        'mlpnnPoint1': 'Three layers: input, hidden, and output layers',
        'mlpnnPoint2': 'Processing elements connected by weights for classification',
        'mlpnnPoint3': 'Parameters: six hidden layers, sigmoid activation function',
        'mlpnnPoint4': '500 epochs, batch size=auto, early stopping=true',
        'mlpnnPoint5': 'Adaptive moment optimization (Adam) with learning rate=0.005',
        'mlpnnPoint6': 'Web API created with Flask framework for model deployment',

        // Model Evaluation
        'evalTitle': 'Model Evaluation Methods',
        'evalPoint1': 'Training accuracy and Mean Square Error (MSE)',
        'evalPoint2': '10-fold cross-validation process',
        'evalPoint3': 'Confusion matrix for accuracy, sensitivity, and specificity',
        'evalPoint4': 'Comparison of original and SMOTE-enhanced models',

        // IoT System Implementation
        'iotSysTitle': 'IoT System Implementation',
        'iotArchitecture': 'IoT System Architecture',
        'iotArchDesc': 'The infrastructure of automatic aquarium system',
        'hardwareTitle': 'Hardware Components',
        'esp32': 'ESP32 DevKitC: Microcontroller with Wi-Fi capability',
        'sensors': 'Sensors: DS18B20 (temperature), pH, DO, TDS, Nitrate ion, LDR (turbidity)',
        'waterControl': 'Water Control: 12V-water pump, 2-way solenoid valve, ultrasonic sensor, horizontal water level sensor',
        'envControl': 'Environmental Control: 5V-LED tube light, 6V-12V air pumps, 12V cooling fans, water heater',
        'feedSystem': 'Feeding System: 12V-step motor with driver, force sensor resistor (FSR)',
        'otherComponents': 'Other: Power supply, relays, microSD card module',

        // Custom Turbidity Sensor
        'turbSensorTitle': 'Custom Turbidity Sensor',
        'turbSensorDesc': 'Developed using white LED and LDR sensor:',
        'turbSensorPoint1': 'Clear water (0 NTU): Vout = 4.56V',
        'turbSensorPoint2': 'Maximum turbidity (2,982 NTU): Vout = 2.50V',
        'turbSensorPoint3': 'Quadratic equation derived for NTU calculation',
        'turbSensorPoint4': 'NTU = -702.705 × Vout² + 3,513.526 × Vout - 1,409.908',

        // Automatic Control Functions
        'autoControlTitle': 'Automatic Control Functions',
        'waterMonitoring': '1. Water Quality Monitoring',
        'waterMonitoringDesc': 'Temperature and DO measured every 5 minutes; pH, TDS, nitrate, and turbidity every 30 minutes. Values sent to server for analysis.',
        'tempControl': '2. Temperature Control',
        'tempControlDesc': 'Cooling fans or water heater activated based on temperature readings to maintain optimal conditions.',
        'airPumpControl': '3. Air Pump Control',
        'airPumpControlDesc': 'Air pumps automatically adjust to increase DO levels when readings are low.',
        'waterReplacement': '4. Water Replacement',
        'waterReplacementDesc': 'Automatic water replacement when quality is poor, using water pump, ultrasonic sensor, and solenoid valve.',
        'feedingSystem': '5. Feeding System',
        'feedingSystemDesc': 'Scheduled feeding with quantity monitoring using step motor and FSR sensor.',
        'notificationSystem': '6. Notification System',
        'notificationSystemDesc': 'LINE Notify sends alerts for critical events; mobile app provides real-time monitoring and control.',

        // Software Architecture
        'softwareArchTitle': 'Software Architecture',
        'softwarePoint1': 'Arduino IDE for ESP32 controller programming (C++)',
        'softwarePoint2': 'Apache web server for communication between smartphone and ESP32',
        'softwarePoint3': 'MySQL database for data storage',
        'softwarePoint4': 'Bootstrap framework for responsive mobile application',
        'softwarePoint5': 'Flask framework for MLPNN model API',
        'softwarePoint6': 'LINE Notify for push notifications',

        // Results and Discussion
        'resultsTitle': 'Results and Discussion',
        'modelEffectiveness': 'Model Effectiveness',
        'modelEffectivenessDesc': 'Model effectiveness evaluation results',
        'systemAccuracy': 'System Accuracy Results',
        'systemAccuracyDesc': 'Accuracy results of the automatic aquarium system',
        'keyFindings': 'Key Findings',
        'keyFindingsPoint1': '400% SMOTE + MLPNN produced highest accuracy (97.31%)',
        'keyFindingsPoint2': 'Model stopped training at 218th epoch with lowest MSE (0.0154)',
        'keyFindingsPoint3': 'Overall system accuracy: 99.89%',
        'keyFindingsPoint4': 'External factors (weather, internet connection) slightly affected accuracy',
        'keyFindingsPoint5': 'Testing and installation at fifteen fish farms for thirty days confirmed reliability',

        // System Benefits
        'systemBenefits': 'System Benefits',
        'reducedMortality': 'Reduced Fish Mortality',
        'reducedMortalityDesc': 'Maintained optimal water quality conditions for fish survival and growth.',
        'automatedMaint': 'Automated Maintenance',
        'automatedMaintDesc': 'Reduced labor requirements and human error in aquarium maintenance.',
        'remoteMonitoring': 'Remote Monitoring',
        'remoteMonitoringDesc': 'Real-time monitoring and control via mobile application.',
        'customSettings': 'Customizable Settings',
        'customSettingsDesc': 'System can be configured for different fish species requirements.',

        // Comparison with Previous Research
        'comparisonTitle': 'Comparison with Previous Research',
        'systemAdvantages': 'System Advantages',
        'relatedResearch': 'Related Research',
        'innovationAspects': 'Innovation Aspects',
        'hybridApproach': 'Hybrid Approach',
        'hybridApproachDesc': 'Unique combination of MLPNN + SMOTE achieves 97.31% prediction accuracy, surpassing basic methods.',
        'customTurbidity': 'Custom Turbidity Sensor',
        'customTurbidityDesc': 'Development of LED and LDR-based turbidity sensor with quadratic equation for NTU calculation.',
        'integratedArch': 'Integrated Architecture',
        'integratedArchDesc': 'Full-stack architecture combining ESP32, AI modeling, database, and mobile application in one cohesive system.',

        // UI and Application Implementation
        'uiImplementationTitle': 'UI and Application Implementation',
        'mobileInterface': 'Mobile Application Interface',
        'accountRegistration': '1. Account Registration',
        'accountRegistrationDesc': 'Register new account or login to access the system',
        'waterQualityMonitor': '2. Water Quality Monitoring',
        'waterQualityMonitorDesc': 'Real-time display of water quality parameters',
        'systemControl': '3. System Control',
        'systemControlDesc': 'Interface to control various aquarium features',
        'notification': '4. Notification',
        'notificationDesc': 'LINE notifications for critical conditions',
        'iotSystemArch': 'IoT System Architecture',
        'iotSystemArchDesc': 'System architecture showing the relationship between clients, server, and aquarium controllers',
        'hardwareDetails': 'Hardware Component Details',
        'hardwareDetailsDesc': 'Details of hardware used in system implementation',
        'uiuxDevelopment': 'UI/UX Development Process',
        'design': 'Design',
        'designDesc': 'UI created with Bootstrap framework for responsiveness across devices. Water quality parameters visualized with cards and color indicators.',
        'implementation': 'Implementation',
        'implementationDesc': 'Application developed with HTML5, CSS3, and JavaScript in frontend, with PHP5 and Python3 for backend. Communication with ESP32 via HTTP protocol.',
        'evaluation': 'Evaluation',
        'evaluationDesc': 'Testing with 15 fish farmers for 30 days showed 99.78% UI accuracy for monitoring and high user satisfaction.',

        // Conclusion
        'conclusionTitle': 'Conclusion',
        'summaryContributions': 'Summary of Contributions',
        'contributionPoint1': 'Proposed an automatic aquarium system using MLPNN and IoT for water quality monitoring',
        'contributionPoint2': 'Applied SMOTE to balance data and improve model accuracy (97.31%)',
        'contributionPoint3': 'Developed custom sensors and integrated with ESP32-based control system',
        'contributionPoint4': 'Created mobile application for real-time monitoring and control',
        'contributionPoint5': 'Successfully tested at fifteen fish farms with 99.89% average system accuracy',

        // Future Work
        'futureWorkTitle': 'Future Work',
        'futurePoint1': 'Expand the scope to cover more ornamental fish species',
        'futurePoint2': 'Scale from small to large fish farming operations',
        'futurePoint3': 'Improve communication network to reduce hardware requirements',
        'futurePoint4': 'Develop adaptive learning model with additional parameters',
        'futurePoint5': 'Consider fish count, tank size, and feeding amount in model',
        'futurePoint6': 'Store sensor data in cloud for sharing among fish farmers',

        // Key Takeaways
        'keyTakeaways': 'Key Takeaways',
        'mlpnnEffectiveness': 'MLPNN Effectiveness',
        'mlpnnEffectivenessDesc': 'Multi-Layer Perceptron Neural Network with SMOTE provides highly accurate prediction of water quality conditions.',
        'iotIntegration': 'IoT Integration',
        'iotIntegrationDesc': 'Internet of Things devices and sensors enable comprehensive monitoring and automated control of aquatic environments.',
        'businessImpact': 'Business Impact',
        'businessImpactDesc': 'Automated systems reduce fish mortality, reduce manual maintenance, and improve business outcomes for ornamental fish farmers.',

        // Final
        'thankYou': 'Thank You!',
        'presentedByFooter': 'Presented by:'
    },
    'id': {
        // Cover
        'title': 'Jaringan Saraf Multi-Layer Perceptron dan Internet of Things untuk Meningkatkan Pemantauan dan Analisis Kualitas Ekosistem Akuatik Realtime',
        'paperSummary': 'Presentasi Ringkasan Jurnal',
        'authors': 'Penulis Jurnal Asli:',
        'publishedIn': 'Dipublikasikan di:',
        'conference': 'International Journal of Interactive Mobile Technologies (2022)',
        'presentedBy': 'Dipresentasikan oleh:',
        'course': 'Mata Kuliah Pembelajaran Mesin',

        // Outline
        'outlineTitle': 'Garis Besar Presentasi',
        'intro': '1. Pendahuluan',
        'problemStatement': 'Latar belakang, tantangan, dan pentingnya pemantauan ekosistem akuatik',
        'waterQuality': '2. Parameter Kualitas Air',
        'waterQualityDesc': 'Indikator utama untuk kesehatan ekosistem akuatik dan kesejahteraan ikan',
        'methods': '3. Metode Penelitian',
        'methodsDescription': 'Akuisisi data, SMOTE, MLPNN, dan pengembangan IoT',
        'iotImplementation': '4. Implementasi Sistem IoT',
        'iotImplementationDesc': 'Sensor, arsitektur perangkat keras, dan fungsi kontrol otomatis',
        'results': '5. Hasil dan Pembahasan',
        'resultsDescription': 'Evaluasi model dan analisis kinerja sistem',
        'comparison': '6. Perbandingan dengan Penelitian Sebelumnya',
        'comparisonDesc': 'Keunggulan dan inovasi dibandingkan dengan studi terkait',
        'uiImplementation': '7. Implementasi UI dan Aplikasi',
        'uiImplementationDesc': 'Antarmuka mobile dan visualisasi sistem',
        'conclusion': '8. Kesimpulan dan Penelitian Selanjutnya',
        'conclusionDescription': 'Ringkasan dan saran untuk penelitian masa depan',

        // Introduction
        'introTitle': 'Pendahuluan',
        'background': 'Latar Belakang',
        'backgroundPoint1': 'Memelihara ikan mengurangi stres dan tekanan darah; membantu mengobati remaja dengan diabetes',
        'backgroundPoint2': 'Pandemi COVID-19 menyebabkan meningkatnya popularitas pemeliharaan ikan hias',
        'backgroundPoint3': 'Bisnis budidaya ikan sering menghadapi tantangan dalam perawatan ikan yang memadai',
        'challenges': 'Tantangan',
        'challengesPoint1': 'Kekurangan staf atau pengasuh untuk pemeliharaan akuarium',
        'challengesPoint2': 'Kesulitan mempertahankan kualitas air yang sesuai untuk setiap spesies ikan',
        'challengesPoint3': 'Kualitas air yang buruk menyebabkan kematian ikan dan kerugian bisnis',
        'quote': '"Untuk ikan bertahan hidup dalam waktu lama, ada banyak faktor seperti suhu air, kekeruhan, TDS, pH, ORP, EC, DO, nitrat dan fosfat."',
        'whyIoT': 'Mengapa IoT dan AI?',
        'whyIoTDesc': 'Internet of Things dan jaringan saraf dapat secara efisien memantau dan mengontrol kualitas air, mengotomatisasi penggantian air, dan memprediksi kondisi ideal untuk kelangsungan hidup dan pertumbuhan ikan.',

        // Water Quality Parameters
        'waterQualityTitle': 'Parameter Kualitas Air',
        'temperature': 'Suhu',
        'temperaturePoint1': 'Ikan adalah hewan berdarah dingin',
        'temperaturePoint2': 'Suhu tubuh/metabolisme berubah sesuai dengan suhu air',
        'temperaturePoint3': 'Mempengaruhi pertumbuhan dan pembiakan secara langsung',
        'ph': 'Tingkat pH',
        'phPoint1': 'Konsentrasi ion hidrogen (H+)',
        'phPoint2': 'pH 7.0 adalah netral, di bawahnya asam, di atasnya basa',
        'phPoint3': 'pH yang cocok untuk ikan: antara 6.5 dan 9.0',
        'do': 'Oksigen Terlarut (DO)',
        'doPoint1': 'Oksigen dari atmosfer dan tumbuhan larut dalam air',
        'doPoint2': 'DO minimum untuk banyak ikan: 4.0-5.0 mg/L',
        'doPoint3': 'Penting untuk pernapasan dan metabolisme ikan',
        'turbidity': 'Kekeruhan',
        'turbidityPoint1': 'Kekeruhan dalam air dari padatan tersuspensi',
        'turbidityPoint2': 'Mempengaruhi penetrasi cahaya dan kejernihan air',
        'turbidityPoint3': 'Dapat menyumbat sistem pernapasan ikan',
        'turbidityPoint4': 'Diukur dalam Nephelometric Turbidity Units (NTU)',
        'tds': 'Total Padatan Terlarut (TDS)',
        'tdsPoint1': 'Konsentrasi zat organik dan anorganik terlarut',
        'tdsPoint2': 'Dapat menyebabkan toksisitas melalui peningkatan salinitas',
        'tdsPoint3': 'Mempengaruhi metabolisme dan reproduksi ikan',
        'nitrate': 'Ion Nitrat',
        'nitratePoint1': 'Dihasilkan dari siklus nitrogen dalam akuarium',
        'nitratePoint2': 'Terbentuk dari kotoran ikan dan makanan yang tidak dimakan',
        'nitratePoint3': 'Kadar tinggi menurunkan hemoglobin darah, mempengaruhi asupan oksigen',
        'nitratePoint4': 'Penggantian air secara teratur mengurangi kadar nitrat',
        'nitrogenCycle': 'Siklus Nitrogen',
        'nitrogenCycleDesc': 'Kotoran ikan dan makanan yang tidak dimakan → Amonia (NH₃) → Nitrit (NO₂⁻) → Nitrat (NO₃⁻). Penggantian air membantu menghilangkan nitrat yang dapat beracun bagi ikan pada kadar tinggi.',

        // Research Methods
        'methodsTitle': 'Metode Penelitian',
        'methodOverview': 'Gambaran Umum Metodologi Penelitian',
        'dataAcq': 'Akuisisi<br>Data',
        'dataAcqDesc': 'Mengumpulkan data dari berbagai peternakan ikan hias',
        'smote': 'Penyeimbangan<br>SMOTE',
        'smoteDesc': 'Teknik Synthetic Minority Over-Sampling membantu mensintesis ulang data',
        'mlpnn': 'Model<br>MLPNN',
        'mlpnnDesc': 'Jaringan Saraf Multi-Layer Perceptron dengan parameter',
        'iot': 'Implementasi<br>IoT',
        'iotDesc': 'Pengembangan sistem perangkat keras dan lunak',

        // Data Acquisition
        'dataAcquisition': 'Akuisisi Data',
        'dataAcqPoint1': 'Mengumpulkan data dari berbagai peternakan ikan hias',
        'dataAcqPoint2': 'Fokus pada lima jenis ikan tropis favorit di Thailand: Angelfish, Ikan Mas, Guppy, Platy, dan Sumatran Tiger Barb',
        'dataAcqPoint3': '1.592 catatan dengan 10 fitur dan 1 kelas (kualitas air)',
        'dataAcqPoint4': 'Fitur: jenis ikan, pH, DO, TDS, nitrat, suhu, kekeruhan, dll.',
        'dataAcqPoint5': 'Kelas output: kualitas air (baik, buruk)',

        // SMOTE
        'smoteTitle': 'SMOTE untuk Data Tidak Seimbang',
        'smoteIntro': 'Teknik Synthetic Minority Over-Sampling membantu mensintesis ulang data dengan:',
        'smotePoint1': 'Menumbuhkan ukuran dataset dengan data kelas kecil',
        'smotePoint2': 'Membuat dataset konsisten dengan kelas terbesar',
        'smotePoint3': 'Mengatur k=5 tetangga terdekat dan randomSeed=1',
        'smotePoint4': 'Meningkatkan dataset dari 1.592 menjadi 5.469 catatan (400% SMOTE)',

        // MLPNN
        'mlpnnTitle': 'Jaringan Saraf Multi-Layer Perceptron',
        'mlpnnIntro': 'Karakteristik utama MLPNN:',
        'mlpnnPoint1': 'Tiga lapisan: lapisan input, hidden, dan output',
        'mlpnnPoint2': 'Elemen pemrosesan terhubung oleh bobot untuk klasifikasi',
        'mlpnnPoint3': 'Parameter: enam lapisan tersembunyi, fungsi aktivasi sigmoid',
        'mlpnnPoint4': '500 epoch, batch size=auto, early stopping=true',
        'mlpnnPoint5': 'Optimisasi adaptif moment (Adam) dengan learning rate=0,005',
        'mlpnnPoint6': 'Web API dibuat dengan framework Flask untuk deployment model',

        // Model Evaluation
        'evalTitle': 'Metode Evaluasi Model',
        'evalPoint1': 'Akurasi pelatihan dan Mean Square Error (MSE)',
        'evalPoint2': 'Proses validasi silang 10-fold',
        'evalPoint3': 'Matriks konfusi untuk akurasi, sensitivitas, dan spesifisitas',
        'evalPoint4': 'Perbandingan model asli dan model yang ditingkatkan dengan SMOTE',

        // IoT System Implementation
        'iotSysTitle': 'Implementasi Sistem IoT',
        'iotArchitecture': 'Arsitektur Sistem IoT',
        'iotArchDesc': 'Infrastruktur sistem akuarium otomatis',
        'hardwareTitle': 'Komponen Perangkat Keras',
        'esp32': 'ESP32 DevKitC: Mikrokontroler dengan kemampuan Wi-Fi',
        'sensors': 'Sensor: DS18B20 (suhu), pH, DO, TDS, ion Nitrat, LDR (kekeruhan)',
        'waterControl': 'Kontrol Air: Pompa air 12V, katup solenoid 2-arah, sensor ultrasonik, sensor level air horizontal',
        'envControl': 'Kontrol Lingkungan: Lampu tabung LED 5V, pompa udara 6V-12V, kipas pendingin 12V, pemanas air',
        'feedSystem': 'Sistem Pemberian Makan: Motor step 12V dengan driver, sensor resistor gaya (FSR)',
        'otherComponents': 'Lainnya: Catu daya, relay, modul kartu microSD',

        // Custom Turbidity Sensor
        'turbSensorTitle': 'Sensor Kekeruhan Kustom',
        'turbSensorDesc': 'Dikembangkan menggunakan LED putih dan sensor LDR:',
        'turbSensorPoint1': 'Air jernih (0 NTU): Vout = 4,56V',
        'turbSensorPoint2': 'Kekeruhan maksimum (2.982 NTU): Vout = 2,50V',
        'turbSensorPoint3': 'Persamaan kuadratik diturunkan untuk perhitungan NTU',
        'turbSensorPoint4': 'NTU = -702,705 × Vout² + 3.513,526 × Vout - 1.409,908',

        // Automatic Control Functions
        'autoControlTitle': 'Fungsi Kontrol Otomatis',
        'waterMonitoring': '1. Pemantauan Kualitas Air',
        'waterMonitoringDesc': 'Suhu dan DO diukur setiap 5 menit; pH, TDS, nitrat, dan kekeruhan setiap 30 menit. Nilai dikirim ke server untuk analisis.',
        'tempControl': '2. Kontrol Suhu',
        'tempControlDesc': 'Kipas pendingin atau pemanas air diaktifkan berdasarkan pembacaan suhu untuk mempertahankan kondisi optimal.',
        'airPumpControl': '3. Kontrol Pompa Udara',
        'airPumpControlDesc': 'Pompa udara secara otomatis menyesuaikan untuk meningkatkan kadar DO ketika pembacaan rendah.',
        'waterReplacement': '4. Penggantian Air',
        'waterReplacementDesc': 'Penggantian air otomatis ketika kualitas buruk, menggunakan pompa air, sensor ultrasonik, dan katup solenoid.',
        'feedingSystem': '5. Sistem Pemberian Makan',
        'feedingSystemDesc': 'Pemberian makan terjadwal dengan pemantauan kuantitas menggunakan motor step dan sensor FSR.',
        'notificationSystem': '6. Sistem Notifikasi',
        'notificationSystemDesc': 'LINE Notify mengirim peringatan untuk peristiwa penting; aplikasi seluler menyediakan pemantauan dan kontrol real-time.',

        // Software Architecture
        'softwareArchTitle': 'Arsitektur Perangkat Lunak',
        'softwarePoint1': 'Arduino IDE untuk pemrograman pengontrol ESP32 (C++)',
        'softwarePoint2': 'Server web Apache untuk komunikasi antara smartphone dan ESP32',
        'softwarePoint3': 'Database MySQL untuk penyimpanan data',
        'softwarePoint4': 'Framework Bootstrap untuk aplikasi seluler responsif',
        'softwarePoint5': 'Framework Flask untuk API model MLPNN',
        'softwarePoint6': 'LINE Notify untuk notifikasi push',

        // Results and Discussion
        'resultsTitle': 'Hasil dan Pembahasan',
        'modelEffectiveness': 'Efektivitas Model',
        'modelEffectivenessDesc': 'Hasil evaluasi efektivitas model',
        'systemAccuracy': 'Hasil Akurasi Sistem',
        'systemAccuracyDesc': 'Hasil akurasi sistem akuarium otomatis',
        'keyFindings': 'Temuan Utama',
        'keyFindingsPoint1': '400% SMOTE + MLPNN menghasilkan akurasi tertinggi (97,31%)',
        'keyFindingsPoint2': 'Model berhenti pelatihan pada epoch ke-218 dengan MSE terendah (0,0154)',
        'keyFindingsPoint3': 'Akurasi sistem keseluruhan: 99,89%',
        'keyFindingsPoint4': 'Faktor eksternal (cuaca, koneksi internet) sedikit mempengaruhi akurasi',
        'keyFindingsPoint5': 'Pengujian dan instalasi di lima belas peternakan ikan selama tiga puluh hari mengkonfirmasi keandalan',

        // System Benefits
        'systemBenefits': 'Manfaat Sistem',
        'reducedMortality': 'Mengurangi Kematian Ikan',
        'reducedMortalityDesc': 'Mempertahankan kondisi kualitas air optimal untuk kelangsungan hidup dan pertumbuhan ikan.',
        'automatedMaint': 'Pemeliharaan Otomatis',
        'automatedMaintDesc': 'Mengurangi kebutuhan tenaga kerja dan kesalahan manusia dalam pemeliharaan akuarium.',
        'remoteMonitoring': 'Pemantauan Jarak Jauh',
        'remoteMonitoringDesc': 'Pemantauan dan kontrol real-time melalui aplikasi seluler.',
        'customSettings': 'Pengaturan yang Dapat Disesuaikan',
        'customSettingsDesc': 'Sistem dapat dikonfigurasi untuk persyaratan berbagai spesies ikan.',

        // Comparison with Previous Research
        'comparisonTitle': 'Perbandingan dengan Penelitian Sebelumnya',
        'systemAdvantages': 'Keunggulan Sistem',
        'relatedResearch': 'Penelitian Terkait',
        'innovationAspects': 'Aspek Inovasi',
        'hybridApproach': 'Pendekatan Hybrid',
        'hybridApproachDesc': 'Kombinasi unik MLPNN + SMOTE mencapai akurasi prediksi 97,31%, melampaui metode dasar.',
        'customTurbidity': 'Sensor Turbiditas Kustom',
        'customTurbidityDesc': 'Pengembangan sensor turbiditas berbasis LED dan LDR dengan persamaan kuadratik untuk penghitungan NTU.',
        'integratedArch': 'Arsitektur Terintegrasi',
        'integratedArchDesc': 'Arsitektur full-stack yang menggabungkan ESP32, pemodelan AI, database, dan aplikasi mobile dalam satu sistem kohesif.',

        // UI and Application Implementation
        'uiImplementationTitle': 'Implementasi UI dan Aplikasi',
        'mobileInterface': 'Antarmuka Aplikasi Mobile',
        'accountRegistration': '1. Registrasi Akun',
        'accountRegistrationDesc': 'Pendaftaran akun baru atau login untuk mengakses sistem',
        'waterQualityMonitor': '2. Pemantauan Kualitas Air',
        'waterQualityMonitorDesc': 'Tampilan parameter kualitas air secara real-time',
        'systemControl': '3. Kontrol Sistem',
        'systemControlDesc': 'Antarmuka untuk mengontrol berbagai fitur akuarium',
        'notification': '4. Notifikasi',
        'notificationDesc': 'Pemberitahuan LINE untuk kondisi kritis',
        'iotSystemArch': 'Arsitektur Sistem IoT',
        'iotSystemArchDesc': 'Arsitektur sistem menunjukkan hubungan antara klien, server, dan kontroler akuarium',
        'hardwareDetails': 'Detail Komponen Perangkat Keras',
        'hardwareDetailsDesc': 'Detail perangkat keras yang digunakan dalam implementasi sistem',
        'uiuxDevelopment': 'Proses Pengembangan UI/UX',
        'design': 'Desain',
        'designDesc': 'UI dibuat dengan framework Bootstrap untuk responsivitas di berbagai perangkat. Parameter kualitas air divisualisasikan dengan kartu dan indikator warna.',
        'implementation': 'Implementasi',
        'implementationDesc': 'Aplikasi dikembangkan dengan HTML5, CSS3, dan JavaScript di frontend, dengan PHP5 dan Python3 untuk backend. Komunikasi dengan ESP32 via protokol HTTP.',
        'evaluation': 'Evaluasi',
        'evaluationDesc': 'Pengujian dengan 15 peternak ikan selama 30 hari menunjukkan akurasi UI untuk monitoring sebesar 99,78% dan tingkat kepuasan pengguna yang tinggi.',

        // Conclusion
        'conclusionTitle': 'Kesimpulan',
        'summaryContributions': 'Ringkasan Kontribusi',
        'contributionPoint1': 'Mengusulkan sistem akuarium otomatis menggunakan MLPNN dan IoT untuk pemantauan kualitas air',
        'contributionPoint2': 'Menerapkan SMOTE untuk menyeimbangkan data dan meningkatkan akurasi model (97,31%)',
        'contributionPoint3': 'Mengembangkan sensor kustom dan mengintegrasikan dengan sistem kontrol berbasis ESP32',
        'contributionPoint4': 'Membuat aplikasi seluler untuk pemantauan dan kontrol real-time',
        'contributionPoint5': 'Berhasil diuji di lima belas peternakan ikan dengan akurasi sistem rata-rata 99,89%',

        // Future Work
        'futureWorkTitle': 'Penelitian Masa Depan',
        'futurePoint1': 'Memperluas cakupan untuk mencakup lebih banyak spesies ikan hias',
        'futurePoint2': 'Menskalakan dari operasi budidaya ikan kecil ke besar',
        'futurePoint3': 'Meningkatkan jaringan komunikasi untuk mengurangi kebutuhan perangkat keras',
        'futurePoint4': 'Mengembangkan model pembelajaran adaptif dengan parameter tambahan',
        'futurePoint5': 'Mempertimbangkan jumlah ikan, ukuran tangki, dan jumlah pemberian makan dalam model',
        'futurePoint6': 'Menyimpan data sensor di cloud untuk berbagi antar pembudidaya ikan',

        // Key Takeaways
        'keyTakeaways': 'Poin Kunci',
        'mlpnnEffectiveness': 'Efektivitas MLPNN',
        'mlpnnEffectivenessDesc': 'Jaringan Saraf Multi-Layer Perceptron dengan SMOTE memberikan prediksi yang sangat akurat tentang kondisi kualitas air.',
        'iotIntegration': 'Integrasi IoT',
        'iotIntegrationDesc': 'Perangkat dan sensor Internet of Things memungkinkan pemantauan komprehensif dan kontrol otomatis lingkungan akuatik.',
        'businessImpact': 'Dampak Bisnis',
        'businessImpactDesc': 'Sistem otomatis mengurangi kematian ikan, mengurangi pemeliharaan manual, dan meningkatkan hasil bisnis bagi pembudidaya ikan hias.',

        // Final
        'thankYou': 'Terima Kasih!',
        'presentedByFooter': 'Dipresentasikan oleh:'
    }
};